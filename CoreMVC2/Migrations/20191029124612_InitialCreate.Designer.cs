// <auto-generated />
using System;
using CoreMVC2.Models.DbLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CoreMVC2.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20191029124612_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CoreMVC2.Models.Entities.Catalog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int>("CreatedUserId");

                    b.Property<bool>("IsActive");

                    b.Property<string>("Name");

                    b.Property<DateTime>("UpdatedDate");

                    b.Property<int>("UpdatedUserId");

                    b.HasKey("Id");

                    b.ToTable("Catalog");
                });

            modelBuilder.Entity("CoreMVC2.Models.Entities.Certificate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int>("CreatedUserId");

                    b.Property<string>("ImagePath");

                    b.Property<bool>("IsActive");

                    b.Property<string>("Text");

                    b.Property<DateTime>("UpdatedDate");

                    b.Property<int>("UpdatedUserId");

                    b.HasKey("Id");

                    b.ToTable("Certificate");
                });

            modelBuilder.Entity("CoreMVC2.Models.Entities.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("City");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int>("CreatedUserId");

                    b.Property<string>("Department");

                    b.Property<string>("DetailInformation");

                    b.Property<string>("Fax");

                    b.Property<string>("ImagePath");

                    b.Property<bool>("IsActive");

                    b.Property<string>("MapPath");

                    b.Property<string>("Phone");

                    b.Property<DateTime>("UpdatedDate");

                    b.Property<int>("UpdatedUserId");

                    b.HasKey("Id");

                    b.ToTable("Company");
                });

            modelBuilder.Entity("CoreMVC2.Models.Entities.Machine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyId");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int>("CreatedUserId");

                    b.Property<bool>("IsActive");

                    b.Property<string>("Name");

                    b.Property<DateTime>("UpdatedDate");

                    b.Property<int>("UpdatedUserId");

                    b.HasKey("Id");

                    b.ToTable("Machine");
                });

            modelBuilder.Entity("CoreMVC2.Models.Entities.New", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int>("CreatedUserId");

                    b.Property<DateTime>("Date");

                    b.Property<string>("ImagePath");

                    b.Property<bool>("IsActive");

                    b.Property<string>("Text");

                    b.Property<DateTime>("UpdatedDate");

                    b.Property<int>("UpdatedUserId");

                    b.HasKey("Id");

                    b.ToTable("New");
                });

            modelBuilder.Entity("CoreMVC2.Models.Entities.Pages", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int>("CreatedUserId");

                    b.Property<bool>("IsActive");

                    b.Property<string>("Name");

                    b.Property<DateTime>("UpdatedDate");

                    b.Property<int>("UpdatedUserId");

                    b.HasKey("Id");

                    b.ToTable("Pages");
                });

            modelBuilder.Entity("CoreMVC2.Models.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CatalogId");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int>("CreatedUserId");

                    b.Property<string>("ImagePath");

                    b.Property<bool>("IsActive");

                    b.Property<string>("Name");

                    b.Property<DateTime>("UpdatedDate");

                    b.Property<int>("UpdatedUserId");

                    b.HasKey("Id");

                    b.HasIndex("CatalogId");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("CoreMVC2.Models.Entities.Reference", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int>("CreatedUserId");

                    b.Property<string>("CustomerName");

                    b.Property<string>("ImagePath");

                    b.Property<bool>("IsActive");

                    b.Property<DateTime>("UpdatedDate");

                    b.Property<int>("UpdatedUserId");

                    b.HasKey("Id");

                    b.ToTable("Reference");
                });

            modelBuilder.Entity("CoreMVC2.Models.Entities.RequestForm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City");

                    b.Property<string>("CompanyName");

                    b.Property<string>("CompanyRepresentative");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int>("CreatedUserId");

                    b.Property<string>("Explanation");

                    b.Property<bool>("IsActive");

                    b.Property<string>("MailAddress");

                    b.Property<string>("PhoneNumber");

                    b.Property<string>("ProductOfInterest");

                    b.Property<double>("Quantity");

                    b.Property<string>("TaxNumber");

                    b.Property<DateTime>("UpdatedDate");

                    b.Property<int>("UpdatedUserId");

                    b.HasKey("Id");

                    b.ToTable("RequestForm");
                });

            modelBuilder.Entity("CoreMVC2.Models.Entities.Product", b =>
                {
                    b.HasOne("CoreMVC2.Models.Entities.Catalog", "Catalog")
                        .WithMany("Products")
                        .HasForeignKey("CatalogId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
